@* @model X.PagedList.PagedList<ChieuT4_Nhom05_WebQLCF.Models.Product>
@using X.PagedList.Mvc.Core;
<link href="~/css/productstyle.css" rel="stylesheet" />

@{
    int numQuantity = 1;
}
<section class="hero-section position-relative jarallax">
    <img src="~/images/banner_shop.jpg" alt="tea cup" class="jarallax-img">
    <div class="hero-content position-absolute d-flex justify-content-center align-items-center text-center">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="page-title text-light fst-italic">Shop</h1>
                    <div class="breadcrumbs text-light">
                        <span class="item">
                            <a asp-area="" asp-controller="Home" asp-action="Index" class="text-light">Home /</a>
                        </span>
                        <span class="item">Shop</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<body>
    <div class="product-collection py-lg-7">
        <div class="container-lg">
            <div class="row" id="productList">
                <!-- Product items will be displayed here -->
            </div>
            <nav class="navigation paging-navigation text-center padding-medium" role="navigation">
                <div class="pagination loop-pagination d-flex justify-content-center align-items-center">
                    <a href="#">
                        <svg class="chevron-left pe-3">
                            <use xlink:href="#chevron-left"></use>
                        </svg>
                    </a>
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <a class="page-numbers @((i == Model.PageNumber) ? "current" : "")" href="@Url.Action("Index", new { page = i })">@i</a>
                        @if (i < Model.PageCount)
                        {
                            <span class="page-numbers-separator">&nbsp;</span>
                        }
                    }
                    <a href="#">
                        <svg class="chevron-right ps-3">
                            <use xlink:href="#chevron-right"></use>
                        </svg>
                    </a>
                </div>
            </nav>
        </div>
    </div>

    <!-- SearchResults.cshtml -->
    <script src="~/js/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    @* <script src="~/js/toastify-js.js"></script> *@
    @* <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <script>
        // Function to fetch product data
        async function fetchProductData() {
            try {
                const response = await fetch('http://localhost:5241/api/ProductApi/getall');
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const products = await response.json();
                displayProductList(products);
            } catch (error) {
                console.error('Error fetching product data:', error);
                // Handle error
            }
        }

        // Function to display product list
        function displayProductList(products) {
            const productListDiv = document.getElementById('productList');
            productListDiv.innerHTML = ''; // Clear previous content

            if (products.length === 0) {
                productListDiv.innerHTML = '<p>No products found.</p>';
                return;
            }

            products.forEach(product => {
                const productItem = document.createElement('div');
                productItem.classList.add('col-lg-3', 'col-md-6', 'mb-5');
                productItem.innerHTML = `
                                            <div class="product-item mx-auto shadow rounded bg-light">
                                                <div class="image-holder mb-3">
                                                    <img src="${product.imageUrl}" alt="${product.name}" class="img-fluid rounded" style="width: 100%; height: 200px; object-fit: cover">
                                                    <div class="overlay">
                                                        <a href="/Customer/Home/Display/${product.id}" class="btn btn-primary">Details</a>
                                                    </div>
                                                </div>
                                                <div class="product-info text-center">
                                                    <h3 class="product-title">
                                                        <a href="/Customer/Home/Display/${product.id}" class="text-dark">${product.name}</a>
                                                    </h3>
                                                    <div class="product-price text-primary">${product.price}</div>
                                                        <form id="addToCartForm_${product.id}" data-product-id="${product.id}" class="add-to-cart-form" action="/ShoppingCart/AddToCart" method="post"> 
                                                        <input type="hidden" name="productId" value="${product.id}" />
                                                        <input type="hidden" name="quantity" value="1" />
                                                        <button type="submit" class="btn btn-outline-dark add-to-cart-btn">
                                                            <i class="bi-cart-fill me-1"></i> Add to cart
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>`;
                productListDiv.appendChild(productItem);
            });
        }

        // Call fetchProductData function when the page loads
        window.addEventListener('load', () => {
            fetchProductData();
        });

        //Search result
        $(document).ready(function () {
            $('#searchInput').on('input', function () {
                var searchTerm = $(this).val();
                if (searchTerm.length > 1) {
                    $.getJSON('@Url.Action("Suggest", "Home", new { area = "Customer" })', { term: searchTerm }, function (data) {
                        var suggestions = data.map(function (item) {
                            return `<li><span>${item}</span></li>`;
                        }).join('');
                        $('#suggestions').html(`<ul>${suggestions}</ul>`).show();
                    });
                } else {
                    $('#suggestions').hide();
                }
            });

            $('#suggestions').on('mouseenter', 'li', function () {
                $('#searchInput').val($(this).text());
            });

            $('#suggestions').on('click', 'li', function () {
                $('#searchInput').val($(this).text());
                $('#suggestions').hide();
                // Kích hoạt tìm kiếm tự động khi click nếu cần
                // $('form').submit();
            });

            $(document).on('click', function (e) {
                if (!$(e.target).closest('#searchInput, #suggestions').length) {
                    $('#suggestions').hide();
                }
            });
        });

        // Xử lý form submit bằng jQuery
        $(document).on('submit', '.add-to-cart-form', function (e) {
            e.preventDefault(); // Ngăn chặn hành động mặc định của biểu mẫu

            var form = $(this);
            var formData = form.serialize();

            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: formData,
                success: function (response) {
                    // Xử lý kết quả thành công
                    console.log('Product added to cart successfully!');

                    // Tạo và hiển thị thông báo
                    Toastify({
                        text: "Product added to cart successfully!",
                        duration: 3000,
                        close: true,
                        gravity: "bottom",
                        position: "right",
                        backgroundColor: "linear-gradient(to right, #28a745, #218838)",
                    }).showToast();
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi
                    console.error('Error adding product to cart:', error);
                }
            });
        });
    </script>
</body> *@
 