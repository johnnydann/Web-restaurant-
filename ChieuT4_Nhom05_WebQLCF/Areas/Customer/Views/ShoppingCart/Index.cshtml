@model ShoppingCart

@{
    ViewData["Title"] = "Cart";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<section class="hero-section position-relative jarallax">
    <img src="~/images/banner_shop.jpg" alt="tea cup" class="jarallax-img">
    <div class="hero-content position-absolute d-flex justify-content-center align-items-center text-center">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="page-title text-light fst-italic">Your Cart</h1>
                    <div class="breadcrumbs text-light">
                        <span class="item">
                            <a asp-area="" asp-controller="Home" asp-action="Index" class="text-light">Home /</a>
                        </span>
                        <span class="item">Your Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<h1>Cart</h1>

<div id="cartData" class="container">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Product</th>
                <th scope="col">Quantity</th>
                <th scope="col">Price</th>
                <th scope="col">Total</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody id="cartBody">
            <!-- Cart items will be displayed here -->
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>
                        <!-- Input field for quantity -->
                        <input type="number" min="1" value="@item.Quantity" onchange="updateQuantity(@item.ProductId, this.value)" />
                    </td>
                    <td>@item.Price</td>
                    <td>@(item.Quantity * item.Price)</td>
                    <td>
                        <!-- Button to remove item -->
                        <button class="btn btn-danger" onclick="removeFromCart(@item.ProductId)">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3" class="text-end"><strong>Total:</strong></td>
                <td id="cartTotal"></td>
                <td>
                    <a class="btn btn-success" href="ShoppingCart/Checkout">Checkout</a>
                </td>
            </tr>
        </tfoot>
    </table>
</div>

@section Scripts {
    <script>
        // Function to fetch product data
        async function fetchProductData(productId) {
            try {
                const response = await fetch(`/api/ProductApi/getall`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const products = await response.json();
                const product = products.find(product => product.id === productId);
                return product ? product.name : '';
            } catch (error) {
                console.error('Error fetching product data:', error);
                return '';
            }
        }

        // Function to fetch cart data
        async function fetchCartData() {
            try {
                const response = await fetch('/api/ShoppingCartApi/GetCart');
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const cart = await response.json();
                displayCartData(cart);
            } catch (error) {
                console.error('Error fetching cart data:', error);
                // Handle error (e.g., show error message to user)
            }
        }

        // Function to display cart data
        async function displayCartData(cart) {
            const cartBody = document.getElementById('cartBody');
            const cartTotal = document.getElementById('cartTotal');
            cartBody.innerHTML = ''; // Clear previous content

            if (cart.items.length === 0) {
                cartBody.innerHTML = '<tr><td colspan="5">Cart is empty.</td></tr>';
                cartTotal.textContent = '0'; // Set total to 0 if cart is empty
                return;
            }

            let total = 0;

            for (const item of cart.items) {
                const productName = await fetchProductData(item.productId);
                const row = document.createElement('tr');
                row.innerHTML = `
                                    <td>${productName}</td>
                                    <td>
                                        <!-- Input field for quantity -->
                                        <input type="number" min="1" value="${item.quantity}" onchange="updateQuantity(${item.productId}, this.value)" />
                                    </td>
                                    <td>${item.price}</td>
                                    <td>${item.quantity * item.price}</td>
                                    <td><button class="btn btn-danger" onclick="removeFromCart(${item.productId})">Remove</button></td>
                                `;
                cartBody.appendChild(row);
                total += item.quantity * item.price;
            }

            cartTotal.textContent = total.toFixed(2); // Format total to 2 decimal places
        }

        // Call fetchCartData function when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            fetchCartData();
        });

        async function removeFromCart(productId) {
            try {
                const response = await fetch(`/api/ShoppingCartApi/RemoveFromCart?productId=${productId}`, {
                    method: 'POST'
                });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                fetchCartData(); // Sau khi xóa, cập nhật lại giỏ hàng
            } catch (error) {
                console.error('Error removing item from cart:', error);
                // Xử lý lỗi (ví dụ: hiển thị thông báo lỗi cho người dùng)
            }
        }

        async function updateQuantity(productId, quantity) {
            try {
                const response = await fetch(`/api/ShoppingCartApi/UpdateQuantity?productId=${productId}&quantity=${quantity}`, {
                    method: 'POST'
                });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                fetchCartData(); // Sau khi cập nhật, cập nhật lại giỏ hàng
            } catch (error) {
                console.error('Error updating quantity of item in cart:', error);
                // Xử lý lỗi (ví dụ: hiển thị thông báo lỗi cho người dùng)
            }
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var selectedProductName = "";

            $(document).on('input', '#searchInput', function () {
                var searchTerm = $(this).val();
                if (searchTerm && searchTerm.length > 1) {
                    $.getJSON('/api/search/suggest', { term: searchTerm }, function (data) {
                        if (data && data.length > 0) {
                            var suggestions = data.map(function (item) {
                                return `<li><span>${item}</span></li>`;
                            }).join('');
                            $('#suggestions').html(`<ul>${suggestions}</ul>`).show();
                        } else {
                            $('#suggestions').hide();
                        }
                    });

                    // Gửi yêu cầu AJAX để tìm kiếm và hiển thị kết quả
                    $.getJSON('/api/search/search', { query: searchTerm }, function (data) {
                        if ($(this).val() === searchTerm) { // Kiểm tra xem giá trị hiện tại của ô tìm kiếm có khớp với giá trị được trả về từ yêu cầu AJAX hay không
                            if (data && data.length > 0) {
                                displaySearchResults(data);
                            } else {
                                // Xử lý trường hợp không có kết quả trả về
                            }
                        }
                    });
                } else {
                    $('#suggestions').hide();
                }
            });

            $(document).on('click', '#suggestions li', function () {
                var selectedProduct = $(this).text();
                $('#searchInput').val(selectedProduct);
                selectedProductName = selectedProduct;
                $('#suggestions').hide();
            });

            function displaySearchResults(products) {
                var productContent = $('.product-content');
                productContent.empty();

                products.forEach(function (product) {
                    var productItem = `
                            <div class="col-lg-3 col-md-6 mb-5">
                                <div class="product-item mx-auto shadow rounded bg-light">
                                    <div class="image-holder mb-3">
                                        <img src="${product.ImageUrl}" alt="${product.Name}" class="img-fluid rounded" style="width: 100%; height: 200px; object-fit: cover;">
                                        <div class="overlay">
                                            <a href="/Customer/Home/display?id=${product.Id}" class="btn btn-primary">Details</a>
                                        </div>
                                    </div>
                                    <div class="product-info text-center">
                                        <h3 class="product-title">
                                            <a href="/Customer/Home/display?id=${product.Id}" class="text-dark">${product.Name}</a>
                                        </h3>
                                        <div class="product-price text-primary">${product.Price}</div>
                                        <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
                                            <input type="hidden" name="productId" value="${product.Id}" />
                                            <input type="hidden" name="quantity" value="1" />
                                            <button type="submit" class="btn btn-outline-dark">
                                                <i class="bi-cart-fill me-1"></i> Add to cart
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        `;
                    productContent.append(productItem);
                });
            }
        });
    </script>
}
