@model ChieuT4_Nhom05_WebQLCF.Models.Product
<link href="~/css/productstyle.css" rel="stylesheet" />
@{
    ViewData["Title"] = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="hero-section position-relative jarallax">
    <img src="~/images/banner_shop.jpg" alt="tea cup" class="jarallax-img">
    <div class="hero-content position-absolute d-flex justify-content-center align-items-center text-center">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="page-title text-light fst-italic">Product Details</h1>
                    <div class="breadcrumbs text-light">
                        <span class="item">
                            <a asp-area="" asp-controller="Home" asp-action="Index" class="text-light">Home /</a>
                        </span>
                        <span class="item">Product Details</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<div class="container mt-5">
    <div id="productDetails" class="row">
        <!-- Product details will be dynamically added here -->
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get('id');

        if (!productId) {
            document.getElementById("productDetails").innerHTML = '<p class="text-danger">Product ID is missing in the URL.</p>';
            return;
        }

        const productDetailsContainer = document.getElementById("productDetails");

        fetch(`/api/ProductApi/getproductbyid/${productId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch product details.');
                }
                return response.json();
            })
            .then(product => {
                const productHTML = `
                    <div class="col-md-6">
                        <img src="${product.imageUrl}" alt="${product.name}" class="img-fluid rounded">
                    </div>
                    <div class="col-md-6">
                        <h2 class="text-primary">${product.name}</h2>
                        <p class="text-muted">Category: ${product.category ? product.category.name : 'N/A'}</p>
                        <p class="lead">Price: ${product.price.toFixed(2)}</p>
                        <p>Description: ${product.description}</p>
                        <div>
                            <button id="addToCartButton" class="btn btn-primary">Add to Cart</button>
                            <a href="/Customer/Home" class="btn btn-secondary">Back to List</a>
                        </div>
                    </div>
                `;
                productDetailsContainer.innerHTML = productHTML;

                document.getElementById("addToCartButton").addEventListener("click", function () {
                    addToCart(productId, 1); // Truyền productId và quantity
                });
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
                productDetailsContainer.innerHTML = '<p class="text-danger">Failed to load product details.</p>';
            });

        // Function to add product to cart via API
        async function addToCart(productId, quantity) {
            try {
                const response = await fetch(`/api/ShoppingCartApi/AddToCart?productId=${productId}&quantity=${quantity}`, {
                    method: 'POST',
                });
                if (!response.ok) {
                    throw new Error('Failed to add product to cart');
                }
                const data = await response.json();
                console.log('Product added to cart:', data);

                // Show success notification using Toastify
                Toastify({
                    text: "Product added to cart successfully!",
                    duration: 3000, 
                    close: true, 
                    gravity: "top", 
                    position: "center", 
                    backgroundColor: "green", 
                    stopOnFocus: true, 
                }).showToast();
            } catch (error) {
                console.error('Error adding product to cart:', error);
                // Optionally, show an error notification
                Toastify({
                    text: "Failed to add product to cart.",
                    duration: 3000, 
                    close: true, 
                    gravity: "top", 
                    position: "center", 
                    backgroundColor: "red", 
                    stopOnFocus: true, 
                }).showToast();
            }
        }

        $(document).on('submit', '.add-to-cart-form', function (e) {
            e.preventDefault(); // Prevent default form submission

            const form = $(this);
            const productId = form.find('input[name="productId"]').val();
            const quantity = form.find('input[name="quantity"]').val();

            addToCart(productId, quantity);
        });
    });



</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        var selectedProductName = "";

        $(document).on('input', '#searchInput', function () {
            var searchTerm = $(this).val();
            if (searchTerm && searchTerm.length > 1) {
                $.getJSON('/api/search/suggest', { term: searchTerm }, function (data) {
                    if (data && data.length > 0) {
                        var suggestions = data.map(function (item) {
                            return `<li><span>${item}</span></li>`;
                        }).join('');
                        $('#suggestions').html(`<ul>${suggestions}</ul>`).show();
                    } else {
                        $('#suggestions').hide();
                    }
                });

                // Gửi yêu cầu AJAX để tìm kiếm và hiển thị kết quả
                $.getJSON('/api/search/search', { query: searchTerm }, function (data) {
                    if ($(this).val() === searchTerm) { // Kiểm tra xem giá trị hiện tại của ô tìm kiếm có khớp với giá trị được trả về từ yêu cầu AJAX hay không
                        if (data && data.length > 0) {
                            displaySearchResults(data);
                        } else {
                            // Xử lý trường hợp không có kết quả trả về
                        }
                    }
                });
            } else {
                $('#suggestions').hide();
            }
        });

        $(document).on('click', '#suggestions li', function () {
            var selectedProduct = $(this).text();
            $('#searchInput').val(selectedProduct);
            selectedProductName = selectedProduct;
            $('#suggestions').hide();
        });

        function displaySearchResults(products) {
            var productContent = $('.product-content');
            productContent.empty();

            products.forEach(function (product) {
                var productItem = `
                <div class="col-lg-3 col-md-6 mb-5">
                    <div class="product-item mx-auto shadow rounded bg-light">
                        <div class="image-holder mb-3">
                            <img src="${product.ImageUrl}" alt="${product.Name}" class="img-fluid rounded" style="width: 100%; height: 200px; object-fit: cover;">
                            <div class="overlay">
                                <a href="/Customer/Home/display?id=${product.Id}" class="btn btn-primary">Details</a>
                            </div>
                        </div>
                        <div class="product-info text-center">
                            <h3 class="product-title">
                                <a href="/Customer/Home/display?id=${product.Id}" class="text-dark">${product.Name}</a>
                            </h3>
                            <div class="product-price text-primary">${product.Price}</div>
                            <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
                                <input type="hidden" name="productId" value="${product.Id}" />
                                <input type="hidden" name="quantity" value="1" />
                                <button type="submit" class="btn btn-outline-dark">
                                    <i class="bi-cart-fill me-1"></i> Add to cart
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            `;
                productContent.append(productItem);
            });
        }
    });
</script>